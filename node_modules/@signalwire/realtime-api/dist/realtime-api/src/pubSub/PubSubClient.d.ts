import { ConsumerContract, UserOptions, PubSub as PubSubNamespace, PubSubContract } from '@signalwire/core';
import { RealtimeClient } from '../client/index';
import type { RealTimePubSubApiEventsHandlerMapping } from '../types/pubSub';
export interface PubSubClientApiEvents extends PubSubNamespace.BasePubSubApiEvents<RealTimePubSubApiEventsHandlerMapping> {
}
export interface ClientFullState extends PubSubClient {
}
interface PubSubClient extends Omit<PubSubContract, 'getAllowedChannels' | 'updateToken'>, Omit<ConsumerContract<PubSubClientApiEvents, ClientFullState>, 'subscribe'> {
    new (opts: PubSubClientOptions): this;
    /** @internal */
    _session: RealtimeClient;
}
interface PubSubClientOptions extends Omit<UserOptions, 'host' | '_onRefreshToken' | 'token'> {
    token?: string;
}
/**
 * Creates a new PubSub client.
 *
 * @param options - {@link PubSubClientOptions}
 *
 * @example
 *
 * ```js
 * import { PubSub } from '@signalwire/realtime-api'
 *
 * const pubSubClient = new PubSub.Client({
 *   project: '<project-id>',
 *   token: '<api-token>'
 * })
 * ```
 */
declare const PubSubClient: new (options?: PubSubClientOptions | undefined) => PubSubClient;
export { PubSubClient as Client };
//# sourceMappingURL=PubSubClient.d.ts.map