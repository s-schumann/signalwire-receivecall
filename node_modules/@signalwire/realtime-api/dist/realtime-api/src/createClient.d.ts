import { ClientEvents, UserOptions } from '@signalwire/core';
import { RealtimeClient } from './Client';
/** @internal */
export interface CreateClientOptions extends UserOptions {
}
export type { RealtimeClient, ClientEvents };
/**
 * Creates a real-time Client.
 * @param userOptions
 * @param userOptions.project SignalWire project id, e.g. `a10d8a9f-2166-4e82-56ff-118bc3a4840f`
 * @param userOptions.token SignalWire project token, e.g. `PT9e5660c101cd140a1c93a0197640a369cf5f16975a0079c9`
 * @param userOptions.logLevel logging level
 * @returns an instance of a real-time Client.
 *
 * @example
 * ```typescript
 * const client = await createClient({
 *   project: '<project-id>',
 *   token: '<project-token>'
 * })
 * ```
 *
 * @deprecated You no longer need to create the client
 * manually. You can use the product constructors, like
 * {@link Video.Client}, to access the same functionality.
 */
export declare const createClient: (userOptions: {
    project?: string;
    token: string;
    logLevel?: 'trace' | 'debug' | 'info' | 'warn' | 'error' | 'silent';
}) => Promise<RealtimeClient>;
//# sourceMappingURL=createClient.d.ts.map